using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/// <summary>
/// A useful utility for playing audio that solves the issues of having audiosources in your gameobjects:
/// + Removes clutter from the inspector of your gameobjects
/// + Ensures that there are enough audio sources to play audio clips uninterrupted
/// + Manages the parameters of your audio source components for you (pitch, volume, mixer, clip, etc)
/// 
/// Warning: this class is inteded for OneShot sound playing. If looping is inteded you'll need to use a different way.
/// </summary>
public class SFXManager : Singleton<SFXManager>
{

    [Header("Parameters")]
    [SerializeField, Tooltip("How many audio sources to generate")]
    protected int sourceAmount = 32;

    // Autogenerated
    protected AudioSource[] sources;

    // Start is called before the first frame update
    void Start()
    {
        // Create temporary object so we don't bloat our inspector
        GameObject temp = new GameObject("AudioSources Container");
        temp.transform.parent = transform;
        temp.transform.localPosition = Vector3.zero;

        // Create a bunch of audio sources
        sources = new AudioSource[sourceAmount];
        for (int i = 0; i < sourceAmount; i++)
        {
            AudioSource source = temp.AddComponent<AudioSource>();
            source.loop = false;
            source.playOnAwake = false;

            sources[i] = source;
        }
    }

    // TODO: Implement functions
}
